HloModule train_step_pipeshard_parallel_mesh_0.47-layer_0, entry_computation_layout={(f32[128,64]{1,0},f32[64]{0},f32[64,128]{1,0},f32[128]{0},f32[8,128]{1,0})->(f32[8,128]{1,0}, f32[8,64]{1,0})}

%add (x: f32[], y: f32[]) -> f32[] {
  %x = f32[] parameter(0)
  %y = f32[] parameter(1)
  ROOT %add = f32[] add(f32[] %x, f32[] %y)
}

%fused_computation (param_1: f32[8,128], param_1.1: f32[128]) -> f32[8,128] {
  %param_1 = f32[8,128]{1,0} parameter(0)
  %param_1.1 = f32[128]{0} parameter(1)
  %broadcast.0 = f32[8,128]{1,0} broadcast(f32[128]{0} %param_1.1), dimensions={1}
  ROOT %add.3 = f32[8,128]{1,0} add(f32[8,128]{1,0} %param_1, f32[8,128]{1,0} %broadcast.0), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_0)/jit(main)/jvp(MLPModel)/Dense_1/add" source_file="/python3.9-env/lib/python3.9/site-packages/flax/linen/linear.py" source_line=200}
}

ENTRY %main.318-layer_0_spmd (param.1: f32[128,64], param.2: f32[64], param.3: f32[64,128], param.4: f32[128], param: f32[8,128]) -> (f32[8,128], f32[8,64]) {
  %param = f32[8,128]{1,0} parameter(4), sharding={devices=[2,1,2]0,1,2,3 last_tile_dim_replicate}, metadata={op_name="layer_0$start"}
  %param.1 = f32[128,64]{1,0} parameter(0), sharding={devices=[1,2,2]0,2,1,3 last_tile_dim_replicate}, metadata={op_name="layer_0$start"}
  %param.2 = f32[64]{0} parameter(1), sharding={devices=[2,2]0,2,1,3 last_tile_dim_replicate}, metadata={op_name="layer_0$start"}
  %broadcast.2 = f32[8,64]{1,0} broadcast(f32[64]{0} %param.2), dimensions={1}
  %cublas-gemm.3 = f32[8,64]{1,0} custom-call(f32[8,128]{1,0} %param, f32[128,64]{1,0} %param.1, f32[8,64]{1,0} %broadcast.2), custom_call_target="__cublas$gemm", output_to_operand_aliasing={{}: (2, {})}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_0)/jit(main)/jvp(MLPModel)/Dense_0/dot_general[dimension_numbers=(((1,), (0,)), ((), ())) precision=None preferred_element_type=None]" source_file="/python3.9-env/lib/python3.9/site-packages/flax/linen/linear.py" source_line=196}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":1,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"precision_config\":{\"operand_precision\":[\"DEFAULT\",\"DEFAULT\"]},\"epilogue\":\"DEFAULT\"}"
  %param.3 = f32[64,128]{1,0} parameter(2), sharding={devices=[2,1,2]0,2,1,3 last_tile_dim_replicate}, metadata={op_name="layer_0$start"}
  %cublas-gemm.5 = f32[8,128]{1,0} custom-call(f32[8,64]{1,0} %cublas-gemm.3, f32[64,128]{1,0} %param.3), custom_call_target="__cublas$gemm", metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_0)/jit(main)/jvp(MLPModel)/Dense_1/dot_general[dimension_numbers=(((1,), (0,)), ((), ())) precision=None preferred_element_type=None]" source_file="/python3.9-env/lib/python3.9/site-packages/flax/linen/linear.py" source_line=196}, backend_config="{\"alpha_real\":1,\"alpha_imag\":0,\"beta\":0,\"dot_dimension_numbers\":{\"lhs_contracting_dimensions\":[\"1\"],\"rhs_contracting_dimensions\":[\"0\"],\"lhs_batch_dimensions\":[],\"rhs_batch_dimensions\":[]},\"precision_config\":{\"operand_precision\":[\"DEFAULT\",\"DEFAULT\"]},\"epilogue\":\"DEFAULT\"}"
  %all-reduce = f32[8,128]{1,0} all-reduce(f32[8,128]{1,0} %cublas-gemm.5), channel_id=1, replica_groups={{0,1},{2,3}}, use_global_device_ids=true, to_apply=%add, sharding={devices=[2,1,2]0,1,2,3 last_tile_dim_replicate}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_0)/jit(main)/jvp(MLPModel)/Dense_1/dot_general[dimension_numbers=(((1,), (0,)), ((), ())) precision=None preferred_element_type=None]" source_file="/python3.9-env/lib/python3.9/site-packages/flax/linen/linear.py" source_line=196}
  %param.4 = f32[128]{0} parameter(3), sharding={replicated}, metadata={op_name="layer_0$start"}
  %fusion = f32[8,128]{1,0} fusion(f32[8,128]{1,0} %all-reduce, f32[128]{0} %param.4), kind=kLoop, calls=%fused_computation, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_0)/jit(main)/jvp(MLPModel)/Dense_1/add" source_file="/python3.9-env/lib/python3.9/site-packages/flax/linen/linear.py" source_line=200}
  ROOT %tuple = (f32[8,128]{1,0}, f32[8,64]{1,0}) tuple(f32[8,128]{1,0} %fusion, f32[8,64]{1,0} %cublas-gemm.3), metadata={op_name="tuple.3"}
}

